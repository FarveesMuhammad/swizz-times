<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Swizz Times</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="/js/admin/login.js" async></script>
    <link rel="stylesheet" href="css/user/user_login.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</head>
<body class="d-flex align-items-center justify-content-center vh-100">
    <div class="custom-card w-25">
        <h2 class="text-center mb-4">Create new password</h2>

       
            <div class="mb-3">
                <input type="password" name="newPassword" id="newPassword" placeholder="Type the new password" 
                    class="form-control custom-input" required>
            </div>
            <div class="mb-3">
                <input type="password" name="confirmPassword" id="confirmPassword" placeholder="Confirm password"
                    class="form-control custom-input" required>
            </div>

            
            <div class="text-center my-2">
                <button type="submit" id="button" class="btn custom-button" style="width: 100%;">Change Password</button>
            </div>
        
    </div>

    <script>
              document.querySelector('.custom-button').addEventListener('click',()=>{
    const newPassword = document.getElementById('newPassword');
    const confirmPassword = document.getElementById('confirmPassword');

    const userEmail = "<%= userEmail %>";

    const showError = (input, message) => {
        let errorDiv = input.parentElement.querySelector('.error-message');

        if (!errorDiv) {
            errorDiv = document.createElement('div');
            errorDiv.className = 'error-message text-danger small mt-1';
            input.parentElement.appendChild(errorDiv);
        }
        errorDiv.innerText = message;
    };

    const clearError = (input) => {
        const errorDiv = input.parentElement.querySelector('.error-message');
        if (errorDiv) {
            errorDiv.remove();
        }
    };

    const checkRequired = (input) => {
        if (input.value.trim() === '') {
            showError(input, 'This field is required');
            return false;
        }
        clearError(input);
        return true;
    };

    const validatePassword = (input) => {
        const re = /^(?=.*[A-Z])(?=.*\d).{6,25}$/; 
        if (!re.test(input.value)) {
            showError(input, 'Password must have at least 1 uppercase letter and 1 number');
            return false;
        }
        clearError(input);
        return true;
    };

    const checkPasswordMatch = () => {
        if (newPassword.value !== confirmPassword.value) {
            showError(confirmPassword, 'Passwords do not match');
            return false;
        }
        clearError(confirmPassword);
        return true;
    };

   
    newPassword.addEventListener('blur', function() {
        checkRequired(newPassword) && validatePassword(newPassword);
    });

    confirmPassword.addEventListener('blur', function() {
        checkRequired(confirmPassword) && checkPasswordMatch();
    });
    const password = document.getElementById('newPassword').value;
    fetch('/changePassword',{
                method : 'POST',
                headers :{'Content-Type':'application/json'},
                body : JSON.stringify({email: userEmail, password})
               })
               .then(res=>res.json())
               .then(data=>{
                if(data.success){
                    window.location.href = '/login'
                }else{
                      Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: data.message,
                            background: '#1a1a1a',
                            color: '#ffffff',
                            confirmButtonColor: '#3085d6',
                            confirmButtonText: 'Got it',
                            customClass: {
                                popup: 'colored-toast',
                                title: 'swal2-title-dark',
                                content: 'swal2-content-dark'
                            }
                        });
                }
               })
               .catch(err=>console.error("Error : ",err))
       
    
});


    </script>

</body>

</html>
                                                                                                                                                                                                