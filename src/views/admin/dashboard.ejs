<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="/css/admin/adminBrands.css">
    <style>
        /* Reset and Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: #f5f6f5;
            color: #333;
            line-height: 1.6;
        }

        .container {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar (Matching Product Page) */
        .sidebar {
            width: 250px;
            background-color: #fff;
            padding: 20px;
            box-shadow: 2px 0 5px rgba(0,0,0,0.1);
            position: fixed;
            height: 100vh;
            top: 0;
            left: 0;
            z-index: 100;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            margin-left: 250px;
            padding: 20px;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .header h1 {
            font-size: 24px;
            font-weight: 600;
            color: #2c3e50;
        }

        /* Cards */
        .card {
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 20px;
            padding: 20px;
            transition: box-shadow 0.2s;
        }

        .card:hover {
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
        }

        .row {
            display: flex;
            flex-wrap: wrap;
            margin: -10px;
        }

        .col-md-3 {
            flex: 0 0 25%;
            max-width: 25%;
            padding: 10px;
        }

        .col-md-6 {
            flex: 0 0 50%;
            max-width: 50%;
            padding: 10px;
        }

        .col-md-12 {
            flex: 0 0 100%;
            max-width: 100%;
            padding: 10px;
        }

        .card h6 {
            color: #7f8c8d;
            font-size: 14px;
            margin-bottom: 8px;
        }

        .card h4 {
            color: #2980b9;
            font-size: 24px;
            font-weight: 600;
            margin: 0;
        }

        /* Table */
        .table-responsive {
            max-height: 500px;
            overflow-y: auto;
            border-radius: 8px;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
            background: #fff;
        }

        .table th {
            background: #ecf0f1;
            padding: 12px;
            text-align: left;
            font-weight: 600;
            color: #2c3e50;
            position: sticky;
            top: 0;
            z-index: 1;
            border-bottom: 2px solid #ddd;
        }

        .table td {
            padding: 12px;
            border-bottom: 1px solid #eee;
            vertical-align: middle;
        }

        .table tbody tr:hover {
            background: #f9f9f9;
        }

        /* Forms */
        .form-label {
            font-weight: 500;
            margin-bottom: 5px;
            color: #2c3e50;
        }

        .form-select, .form-control {
            width: 100%;
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
            margin-bottom: 10px;
        }

        .form-select:focus, .form-control:focus {
            border-color: #3498db;
            box-shadow: 0 0 5px rgba(52,152,219,0.3);
            outline: none;
        }

        .error-message {
            color: #e74c3c;
            font-size: 12px;
            margin-top: -5px;
            margin-bottom: 5px;
        }

        /* Buttons */
        .btn {
            padding: 8px 16px;
            border-radius: 4px;
            border: none;
            font-size: 14px;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .btn-primary {
            background: #3498db;
            color: white;
        }

        .btn-primary:hover {
            background: #2980b9;
        }

        /* Dropdown */
        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-menu {
            position: absolute;
            background: #fff;
            border-radius: 4px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.15);
            min-width: 120px;
            z-index: 1000;
        }

        .dropdown-item {
            padding: 8px 16px;
            color: #333;
            text-decoration: none;
            display: block;
        }

        .dropdown-item:hover {
            background: #f5f6f5;
        }

        /* Pagination */
        .pagination {
            display: flex;
            justify-content: center;
            gap: 5px;
            margin-top: 20px;
        }

        .pagination .page-item {
            display: inline-block;
        }

        .pagination .page-link {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            color: #3498db;
            text-decoration: none;
        }

        .pagination .page-item.active .page-link {
            background: #3498db;
            color: white;
            border-color: #3498db;
        }

        .pagination .page-link:hover {
            background: #f5f6f5;
        }

        /* Responsive Design */
        @media (max-width: 992px) {
            .col-md-3, .col-md-6 {
                flex: 0 0 50%;
                max-width: 50%;
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                width: 200px;
            }
            .main-content {
                margin-left: 200px;
            }
            .col-md-3, .col-md-6, .col-md-12 {
                flex: 0 0 100%;
                max-width: 100%;
            }
            .header {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }
        }

        @media (max-width: 576px) {
            .sidebar {
                position: absolute;
                transform: translateX(-100%);
                transition: transform 0.3s;
            }
            .main-content {
                margin-left: 0;
            }
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <%- include('../partials/admin/admin_sidebar') %>
        <div class="main-content">
            <div class="header">
                <h1>Dashboard</h1>
               
                <div class="dropdown">
                    <button class="btn btn-primary dropdown-toggle" type="button" id="downloadReportDropdown">
                        Download Report
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="downloadReportDropdown">
                        <li><a class="dropdown-item" href="/admin/download/excel?filter=<%= selectedFilter %>&startDate=<%= startDate %>&endDate=<%= endDate %>">Export Excel</a></li>
                        <li><a class="dropdown-item" 
                            href="/admin/download/pdf?filter=<%= selectedFilter || 'daily' %>&startDate=<%= startDate || '' %>&endDate=<%= endDate || '' %>">
                            Export PDF
                        </a></li>
                                            </ul>
                </div>
                <button class="logout-button" onclick="window.location.href='/admin/logout'">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none"
                         stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
                        <polyline points="16 17 21 12 16 7"></polyline>
                        <line x1="21" y1="12" x2="9" y2="12"></line>
                    </svg>
                    <span>Logout</span>
                </button>
            </div>

            <!-- Summary Cards -->
            <div class="row">
                <div class="col-md-3">
                    <div class="card">
                        <h6>Total Sales</h6>
                        <h4>₹<%= totalSales.toFixed(2) %></h4>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card">
                        <h6>Total Orders</h6>
                        <h4><%= totalOrders %></h4>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card">
                        <h6>Total Discount</h6>
                        <h4>₹<%= totalDiscount.toFixed(2) %></h4>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card">
                        <h6>Total Products Sold</h6>
                        <h4><%= totalProductsSold %></h4>
                    </div>
                </div>
            </div>

            <!-- Filter Form -->
            <div class="card">
                <div class="card">
                    <form action="/admin/dashboard" method="GET" id="filterForm" onsubmit="return validateForm(event)">
                        <div class="row">
                            <div class="col-md-3">
                                <label class="form-label">Filter:</label>
                                <select name="filter" class="form-select" onchange="toggleDateInputs(this)">
                                    <option value="daily" <%= selectedFilter === 'daily' ? 'selected' : '' %>>Daily</option>
                                    <option value="weekly" <%= selectedFilter === 'weekly' ? 'selected' : '' %>>Weekly</option>
                                    <option value="monthly" <%= selectedFilter === 'monthly' ? 'selected' : '' %>>Monthly</option>
                                    <option value="yearly" <%= selectedFilter === 'yearly' ? 'selected' : '' %>>Yearly</option>
                                    <option value="custom" <%= selectedFilter === 'custom' ? 'selected' : '' %>>Custom</option>
                                </select>
                            </div>
                            <div class="col-md-3" id="startDateDiv" <%= selectedFilter !== 'custom' ? 'style="display:none"' : '' %>>
                                <label class="form-label">Start Date:</label>
                                <input type="date" name="startDate" class="form-control" value="<%= startDate %>">
                                <div id="startDateError" class="error-message"></div>
                            </div>
                            <div class="col-md-3" id="endDateDiv" <%= selectedFilter !== 'custom' ? 'style="display:none"' : '' %>>
                                <label class="form-label">End Date:</label>
                                <input type="date" name="endDate" class="form-control" value="<%= endDate %>">
                                <div id="endDateError" class="error-message"></div>
                            </div>
                            <div class="col-md-3">
                                <button type="submit" class="btn btn-primary" style="margin-top: 32px;">Apply Filter</button>
                            </div>
                        </div>
                    </form>
            </div>

            <!-- Order Details Table -->
            <div class="card">
                <h4 style="margin-bottom: 15px;">Order Details</h4>
                <div class="table-responsive ">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Order ID</th>
                                <th>Date</th>
                                <th>Products</th>
                                <th>Total Amount</th>
                                <th>Discount</th>
                                <th>Payment Status</th>
                                <th>Payment Type</th>
                                <th>Order Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% orders.forEach(order => { %>
                                <tr>
                                    <td><%= order.orderId %></td>
                                    <td><%= order.createdAt.toLocaleDateString() %></td>
                                    <td>
                                        <% order.items.forEach(item => { %>
                                            <div>
                                                <%= item.product?.productName || 'N/A' %> 
                                                (Qty: <%= item.quantity %>)
                                            </div>
                                        <% }) %>
                                    </td>
                                    <td>₹<%= order.totalAmount.toFixed(2) %></td>
                                    <td>₹<%= (order.discount + order.couponDiscount).toFixed(2) %></td>
                                    <td><%= order.paymentStatus %></td>
                                    <td><%= order.paymentMethod%></td>
                                    <td><%= order.orderStatus %></td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
            
                

                <% if (totalPages > 1) { %>
                    <nav class="pagination">
                        <% for (let i = 1; i <= totalPages; i++) { %>
                            <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                <a class="page-link" href="/admin/dashboard?page=<%= i %>&filter=<%= selectedFilter %>&startDate=<%= startDate %>&endDate=<%= endDate %>">
                                    <%= i %>
                                </a>
                            </li>
                        <% } %>
                    </nav>
                <% } %>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-body">
                            <h4>Top Best Selling Products</h4>
                            <canvas id="bestProductsChart"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-body">
                            <h4>Top Best Selling Categories</h4>
                            <canvas id="bestCategoriesChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-body">
                            <h4>Sales Over Time</h4>
                            <canvas id="salesChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
       

    

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Existing JavaScript remains unchanged
        function setActiveMenuItem() {
            const currentPath = window.location.pathname.toLowerCase();
            const menuButtons = document.querySelectorAll('.sidebar .nav-button');
            menuButtons.forEach(button => {
                button.classList.remove('active');
                const buttonText = button.textContent.trim().toLowerCase();
                const routes = {
                    "dashboard": "/admin/dashboard",
                    "product": "/admin/products",
                    "users": "/admin/users",
                    "brands": "/admin/brands",
                    "category": "/admin/category",
                    "orders": "/admin/orders",
                    "coupons": "/admin/coupons",
                    "wallet": "/admin/wallet",
                    
                };
                if (routes[buttonText] === currentPath) {
                    button.classList.add('active');
                }
                button.addEventListener('click', () => {
                    const route = routes[buttonText];
                    if (route) {
                        window.location.href = route;
                    }
                });
            });
        }

        document.addEventListener('DOMContentLoaded', setActiveMenuItem);

        document.getElementById('downloadReportDropdown').addEventListener('click', function() {
            const dropdownMenu = this.nextElementSibling;
            const isCurrentlyVisible = dropdownMenu.classList.contains('show');
            document.querySelectorAll('.dropdown-menu.show').forEach(menu => {
                menu.classList.remove('show');
            });
            if (!isCurrentlyVisible) {
                dropdownMenu.classList.add('show');

            }
        });
        const bestProductsCtx = document.getElementById('bestProductsChart').getContext('2d');
    const bestProductsChart = new Chart(bestProductsCtx, {
        type: 'bar',
        data: {
            labels: <%- JSON.stringify(bestSellingProducts.map(p => p.name)) %>,
            datasets: [{
                label: 'Revenue (₹)',
                data: <%- JSON.stringify(bestSellingProducts.map(p => p.revenue)) %>,
                backgroundColor: 'rgba(54, 162, 235, 0.6)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    title: { display: true, text: 'Revenue (₹)' }
                }
            },
            plugins: {
                legend: { display: true }
            }
        }
    });

    const bestCategoriesCtx = document.getElementById('bestCategoriesChart').getContext('2d');
    const bestCategoriesChart = new Chart(bestCategoriesCtx, {
        type: 'bar',
        data: {
            labels: <%- JSON.stringify(bestCategories.map(c => c.name)) %>,
            datasets: [{
                label: 'Revenue (₹)',
                data: <%- JSON.stringify(bestCategories.map(c => c.revenue)) %>,
                backgroundColor: 'rgba(75, 192, 192, 0.6)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    title: { display: true, text: 'Revenue (₹)' }
                }
            },
            plugins: {
                legend: { display: true }
            }
        }
    });

    const salesCtx = document.getElementById('salesChart').getContext('2d');
const salesChart = new Chart(salesCtx, {
    type: 'line',
    data: {
        labels: <%- JSON.stringify(salesData.map(s => s.date)) %>,
        datasets: [{
            label: 'Total Sales (₹)',
            data: <%- JSON.stringify(salesData.map(s => s.revenue || 0)) %>,
            backgroundColor: 'rgba(255, 99, 132, 0.2)',  
            borderColor: 'rgba(255, 99, 132, 1)',
            borderWidth: 2,
            fill: true,  
            tension: 0.4, 
            pointBackgroundColor: 'rgba(255, 99, 132, 1)',
            pointBorderColor: '#fff',
            pointBorderWidth: 2,
            pointRadius: 4,
            pointHoverRadius: 6
        }]
    },
    options: {
        responsive: true,
        maintainAspectRatio: true,
        scales: {
            y: {
                beginAtZero: true,
                title: { 
                    display: true, 
                    text: 'Sales (₹)',
                    font: {
                        size: 14,
                        weight: 'bold'
                    }
                },
                ticks: {
                    callback: function(value) {
                        return '₹' + value.toLocaleString();
                    },
                    font: {
                        size: 12
                    }
                },
                grid: {
                    color: 'rgba(0, 0, 0, 0.1)'
                }
            },
            x: {
                title: { 
                    display: true, 
                    text: 'Date',
                    font: {
                        size: 14,
                        weight: 'bold'
                    }
                },
                ticks: {
                    font: {
                        size: 12
                    },
                    maxRotation: 45,
                    minRotation: 45
                },
                grid: {
                    display: false  // Remove vertical grid lines
                }
            }
        },
        plugins: {
            legend: {
                display: true,
                position: 'top',
                labels: {
                    font: {
                        size: 14
                    }
                }
            },
            tooltip: {
                enabled: true,
                mode: 'index',
                intersect: false,
                backgroundColor: 'rgba(0, 0, 0, 0.8)',
                titleFont: {
                    size: 14
                },
                bodyFont: {
                    size: 12
                },
                callbacks: {
                    label: function(context) {
                        let label = context.dataset.label || '';
                        if (label) {
                            label += ': ';
                        }
                        label += '₹' + context.parsed.y.toLocaleString();
                        return label;
                    }
                }
            }
        },
        interaction: {
            mode: 'nearest',
            axis: 'x',
            intersect: false
        },
        animation: {
            duration: 1000,
            easing: 'easeOutQuart'
        }
    }
});

        document.addEventListener('click', function(event) {
            if (!event.target.matches('.dropdown-toggle')) {
                document.querySelectorAll('.dropdown-menu.show').forEach(menu => {
                    menu.classList.remove('show');
                });
            }
        }, true);

        function toggleDateInputs(select) {
            const startDateDiv = document.getElementById('startDateDiv');
            const endDateDiv = document.getElementById('endDateDiv');
            const isCustom = select.value === 'custom';
            startDateDiv.style.display = isCustom ? 'block' : 'none';
            endDateDiv.style.display = isCustom ? 'block' : 'none';
        }

        function validateForm(event) {
            event.preventDefault();
            const filter = document.querySelector('select[name="filter"]').value;
            const startDateInput = document.querySelector('input[name="startDate"]');
            const endDateInput = document.querySelector('input[name="endDate"]');
            const startDateError = document.getElementById('startDateError');
            const endDateError = document.getElementById('endDateError');

            startDateError.style.display = 'none';
            endDateError.style.display = 'none';
            startDateError.textContent = '';
            endDateError.textContent = '';

            if (filter !== 'custom') {
                event.target.submit();
                return true;
            }

            const startDate = startDateInput.value;
            const endDate = endDateInput.value;
            const today = new Date().toISOString().split('T')[0];

            if (!startDate) {
                startDateError.textContent = 'Start date is required.';
                startDateError.style.display = 'block';
                return false;
            }
            if (!endDate) {
                endDateError.textContent = 'End date is required.';
                endDateError.style.display = 'block';
                return false;
            }
            if (new Date(endDate) < new Date(startDate)) {
                endDateError.textContent = 'End date cannot be before start date.';
                endDateError.style.display = 'block';
                return false;
            }
            if (startDate > today) {
                startDateError.textContent = 'Start date cannot be in the future.';
                startDateError.style.display = 'block';
                return false;
            }
            if (endDate > today) {
                endDateError.textContent = 'End date cannot be in the future.';
                endDateError.style.display = 'block';
                return false;
            }

            event.target.submit();
            return true;
        }
        
    </script>
</body>
</html>