<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Swizz Times - Categories</title>
    <link rel="stylesheet" href="/css/admin/adminCategory.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</head>
<body>
    <div class="container">
        <%- include('../partials/admin/admin_sidebar') %>
        <div class="main-content">
            <div class="header">
                <h1>Watch Categories</h1>
                <button class="logout-button" onclick="window.location.href='/admin/logout'">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
                        <polyline points="16 17 21 12 16 7"></polyline>
                        <line x1="21" y1="12" x2="9" y2="12"></line>
                    </svg>
                    <span>Logout</span>
                </button>
            </div>
            <div class="search-container">
                <form id="searchForm" action="/admin/category" method="GET">
                    <input type="text" name="search" id="searchInput" placeholder="Search categories..." 
                           class="search-input" value="<%= searchQuery %>">
                    <button type="submit" class="search-btn">Search</button>
                    <% if (searchQuery) { %>
                        <button type="button" class="clear-btn" onclick="resetSearch()">Clear</button>
                    <% } %>
                </form>
                <button class="add-button" onclick="redirectToAddCategory()">ADD CATEGORY +</button>
            </div>
            
    
            <!-- Category Cards Container -->
            <div class="category-cards-container">
                <!-- Header Row with Titles -->
                <div class="category-header-row">
                  <div class="category-header name-header"><h4>Name</h4></div>
                  <div class="category-header description-header"><h4>Description</h4></div>
                  <div class="category-header description-header"><h4>offers</h4></div>
                  <div class="category-header actions-header"><h4>Actions</h4></div>
                </div>
              
                <!-- Category Cards -->
                <% categories.forEach(category => { %>
                  <div class="category-card" data-name="<%= category.name.toLowerCase() %>">
                    <div class="category-details">
                      <h3 class="category-name"><%= category.name %></h3>
                      <div class="category-description"><%= category.description %></div>
                      <div class="category-offer">
                        <%= category.offer ? category.offer + "%" : "No Offer" %>
                      </div>
                      <div class="category-meta">
                        <div class="action-buttons">
                            <button class="action-btn edit-btn" 
                            onclick="editCategory('<%= category._id %>', 
                                                  '<%= category.name %>', 
                                                  '<%= category.description %>', 
                                                  '<%= category.offer %>')">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                              <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                              <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                            </svg>
                          </button>
                          <button class="action-btn block-btn" onclick="toggleCategoryBlock('<%= category._id %>', this)">
                            <%= category.isBlocked ? "Unblock" : "Block" %>
                        </button>
                        
                          <!-- <button class="action-btn delete-btn" onclick="deleteCategory('<%= category._id %>')"> -->
                            <!-- <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                              <polyline points="3 6 5 6 21 6"></polyline>
                              <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>
                            </svg> -->
                        
                        </div>
                      </div>
                    </div>
                  </div>
                <% }) %>
              </div>
        </div>
    </div>


    <div class="pagination">
        <% if (currentPage > 1) { %>
            <a href="/admin/category?page=<%= currentPage - 1 %>" class="prev-btn">Previous</a>
        <% } %>
    
        <span>Page <%= currentPage %> of <%= totalPages %></span>
    
        <% if (currentPage < totalPages) { %>
            <a href="/admin/category?page=<%= currentPage + 1 %>" class="next-btn">Next</a>
        <% } %>
    </div>
  
    <script>
        // Function to redirect to add category page
        function redirectToAddCategory() {
            window.location.href = '/admin/category/add-category';
        }


        // Function to set active menu item
        function setActiveMenuItem() {
            const currentPath = window.location.pathname.toLowerCase();
            const menuButtons = document.querySelectorAll('.sidebar .nav-button');

            menuButtons.forEach(button => {
                button.classList.remove('active'); 

                const buttonText = button.textContent.trim().toLowerCase();
                
                const routes = {
                    "dashboard": "/admin/dashboard",
                    "product": "/admin/products",
                    "users": "/admin/users",
                    "brands": "/admin/brands",
                    "category": "/admin/category",
                    "orders": "/admin/orders",
                    "coupons": "/admin/coupons",
                    "wallet": "/admin/wallet",
                  
                };

                if (routes[buttonText] === currentPath) {
                    button.classList.add('active');
                }

                button.addEventListener('click', () => {
                    const route = routes[buttonText];
                    if (route) {
                        window.location.href = route;
                    }
                });
            });
        }

        document.addEventListener('DOMContentLoaded', setActiveMenuItem);

        function toggleCategoryBlock(categoryId, button) {
    const action = button.textContent.trim() === "Block" ? "block" : "unblock";

    Swal.fire({
        title: `Are you sure you want to ${action} this category?`,
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: `Yes, ${action} it!`
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/admin/category/block-unblock/${categoryId}`, { method: 'PATCH' })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire(`${action === "block" ? "Blocked" : "Unblocked"}!`, `Category has been ${action}ed.`, "success")
                            .then(() => {
                                // Toggle button text dynamically
                                button.textContent = action === "block" ? "Unblock" : "Block";
                            });
                    } else {
                        Swal.fire("Error", data.message, "error");
                    }
                })
                .catch(err => console.error(`Error ${action}ing category:`, err));
        }
    });
}

        function resetSearch() {
        window.location.href = "/admin/category";  // Redirect to remove search query
    }
 
    function editCategory(categoryId, currentName, currentDescription,  currentOffer = 0) {
        Swal.fire({
    title: "Edit Category",
    html: `
        <div style="display: flex; flex-direction: column; gap: 10px; text-align: left;">
            <label for="swal-category-name" style="font-weight: bold;">Category Name</label>
            <input id="swal-category-name" class="swal2-input" value="${currentName}" placeholder="Enter category name">
            
            <label for="swal-category-description" style="font-weight: bold;">Description</label>
            <textarea id="swal-category-description" class="swal2-textarea" placeholder="Enter category description">${currentDescription}</textarea>
            
            <label for="swal-category-offer" style="font-weight: bold;">Offer (%)</label>
            <input id="swal-category-offer" class="swal2-input" type="number" min="0" max="100" value="${currentOffer}" placeholder="Enter discount (0-100)">
        </div>
    `,
    showCancelButton: true,
    confirmButtonText: "Save Changes",
    cancelButtonText: "Cancel",
    customClass: {
        popup: 'custom-swal-popup'
    },
    preConfirm: () => {
        return {
            name: document.getElementById("swal-category-name").value.trim(),
            description: document.getElementById("swal-category-description").value.trim(),
            offer: parseInt(document.getElementById("swal-category-offer").value) || 0
        };
    }
})
 .then((result) => {
            if (result.isConfirmed) {
                const updatedCategory = result.value;
                
               
                fetch(`/admin/category/update/${categoryId}`, {
                    method: 'PUT',
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(updatedCategory)
                })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire("Updated", "Category has been updated.", "success")
                            .then(() => window.location.reload());
                    } else {
                        Swal.fire("Error", data.message, "error");
                    }
                })
                .catch(err => console.error("Error updating category:", err));
            }
        });
    }


    </script>
</body>
</html>